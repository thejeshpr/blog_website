# Generated by Django 2.1.5 on 2019-01-23 11:56

from django.db import migrations, models
import django.db.models.deletion
import taggit.managers


class Migration(migrations.Migration):

    dependencies = [
        ('taggit', '0002_auto_20150616_2121'),
        ('blogapp', '0002_category'),
    ]

    operations = [
        migrations.CreateModel(
            name='Article',
            fields=[
                ('basemodel_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='blogapp.BaseModel')),
                ('content', models.TextField(help_text='Content')),
                ('draft', models.BooleanField(default=True, help_text='Draft')),
                ('published_date', models.DateTimeField(help_text='Article Published Date')),
                ('read_time', models.CharField(blank=True, max_length=100, null=True)),
                ('title', models.TextField(help_text='Article Title', max_length=300, unique_for_date=models.DateTimeField(help_text='Article Published Date'))),
                ('slug', models.SlugField(unique_for_date=models.DateTimeField(help_text='Article Published Date'))),
            ],
            bases=('blogapp.basemodel',),
        ),
        migrations.AlterField(
            model_name='basemodel',
            name='active',
            field=models.BooleanField(default=True, help_text='Active?'),
        ),
        migrations.AlterField(
            model_name='category',
            name='created_by',
            field=models.ForeignKey(help_text='Created User Name', on_delete=models.SET(1), related_name='created_categories', to='blogapp.Author'),
        ),
        migrations.AlterField(
            model_name='category',
            name='name',
            field=models.TextField(help_text='Category Name', max_length=200, unique=True),
        ),
        migrations.AddField(
            model_name='article',
            name='cat',
            field=models.ForeignKey(help_text='Article Category', on_delete=models.SET(1), related_name='articles', to='blogapp.Category'),
        ),
        migrations.AddField(
            model_name='article',
            name='created_by',
            field=models.ForeignKey(on_delete=models.SET(1), related_name='articles', to='blogapp.Author'),
        ),
        migrations.AddField(
            model_name='article',
            name='tags',
            field=taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags'),
        ),
    ]
